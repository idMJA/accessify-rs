name: Build Multi-Platform Binaries

on:
  push:
    branches: [ '**' ]
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.artifact }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: Linux x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: accessify-linux-x86_64
          - name: Linux ARM64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact: accessify-linux-arm64
          - name: Windows x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: accessify-windows-x86_64.exe
          - name: macOS x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            artifact: accessify-macos-x86_64
          - name: macOS ARM64
            os: macos-latest
            target: aarch64-apple-darwin
            artifact: accessify-macos-arm64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust (${{ matrix.name }})
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross (${{ matrix.name }})
        run: cargo install cross

      - name: Build release (${{ matrix.name }})
        run: cross build --release --target ${{ matrix.target }}

      - name: Upload artifact (${{ matrix.name }})
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: |
            ${{ (matrix.os == 'windows-latest' && format('target/{0}/release/accessify.exe', matrix.target)) || format('target/{0}/release/accessify', matrix.target) }}

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha,prefix=
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
